plugins {
    id 'java'
    id 'maven-publish'
    id 'cl.franciscosolis.sonatype-central-upload' version '1.0.3'
}

group = 'dev.yuzuki'
version = '1.0'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of (8))
    }
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            pom {
                name = project.name
                description = 'A collection of common utilities for our project'
                url = "https://github.com/Yuzuki-Network/common-utils"
                licenses {
                    license {
                        //mit
                        name = 'The MIT License'
                        url = 'https://github.com/Yuzuki-Network/common-utils/blob/master/LICENSE'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = "minearchive"
                        name = "Mine Archive"
                        email = "contact@minearchive.net"
                    }
                }

                scm {
                    connection = "scm:git:git://github.com/Yuzuki-Network/common-utils.git"
                    developerConnection = "scm:git:ssh://github.com/Yuzuki-Network/common-utils.git"
                    url = "https://github.com/Yuzuki-Network/common-utils"
                }
            }
        }
    }
}

sonatypeCentralUpload {
    dependsOn "jar", "sourcesJar", "javadocJar", "generatePomFileForMavenPublication"

    username = System.getenv("SONATYPE_USERNAME")
    password = System.getenv("SONATYPE_PASSWORD")

    archives = files(
            tasks.named("jar").get(),
            tasks.named("sourcesJar").get(),
            tasks.named("javadocJar").get()
    )

    pom = tasks.named("generatePomFileForMavenPublication").get().outputs.files.singleFile

    signingKey = System.getenv("PGP_SIGNING_KEY")
    signingKeyPassphrase = System.getenv("PGP_KEY_PASSPHRASE")
}